#!/bin/bash
set -e

if [ "$container" != "mkosi" ]; then
    exec mkosi-chroot "$SCRIPT" "$@"
fi

TEMP=$(getopt -o 'c:' --long 'config:' -n 'mkosi.build' -- "$@")
if [ $? -ne 0 ]; then
        echo 'Terminating...' >&2
        exit 1
fi

eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
        '-c'|'--config')
            CONFIG="$2"
            shift 2
            continue
        ;;
        '--')
            shift
            break
        ;;
        *)
            echo 'Internal error!' >&2
            exit 1
        ;;
    esac
done

# Run commands as the user running mkosi.
SU="setpriv --reuid=${MKOSI_UID:-0} --regid=${MKOSI_GID:-0} --clear-groups"

if [ -f "$SRCDIR/fstests/Makefile" ]; then
    cd "$SRCDIR/fstests"
    $SU make -j "$(nproc)"
fi

if [ -f "$SRCDIR/ltp/Makefile" ]; then
    cd "$SRCDIR/ltp"
    $SU make -j "$(nproc)" autotools
    $SU ./configure
    $SU make -j "$(nproc)"
    make install
fi

if [ -f "$SRCDIR/btrfs-progs/autogen.sh" ]; then
    cd "$SRCDIR/btrfs-progs"
    if [ ! -f ./configure ]; then
        $SU ./autogen.sh
        $SU ./configure --disable-documentation --enable-experimental --bindir=/usr/bin --prefix=/usr --exec-prefix=/usr --disable-python
    fi
    $SU make -j "$(nproc)"
    make install
fi

if [ -f "$SRCDIR/bpfilter/CMakeLists.txt" ]; then
        cd "$SRCDIR/bpfilter"
        $SU cmake -B "$BUILDDIR/bpfilter"
        $SU cmake --build "$BUILDDIR/bpfilter"
        cmake --install "$BUILDDIR/bpfilter" --prefix /usr
fi

if [ -f "$SRCDIR/kernel/Makefile" ]; then
    cd "$SRCDIR/kernel"

    if [ -z "$CONFIG" ]; then
        if [ -f "$SRCDIR/kernel/mkosi.kernel.config" ]; then
            CONFIG="kernel/mkosi.kernel.config"
        else
            CONFIG="mkosi.kernel.config"
        fi
    fi

    echo "Using kernel config $CONFIG"

    collect_files()
    {
        local file res=

        for file; do
            case "$file" in
            *\~*)
                continue
                ;;
            esac
            if test -e "$file"; then
                res="$res$(cat "$file")"
            fi
        done
        echo "$res"
    }

    FILE_LOCALVERSION="$(collect_files localversion*)"
    CONFIG_LOCALVERSION=$(sed -n 's/^CONFIG_LOCALVERSION=\(.*\)$/\1/p' "$SRCDIR/$CONFIG")

    BUILDDIR="$BUILDDIR/kernel/${FILE_LOCALVERSION}${CONFIG_LOCALVERSION}${LOCALVERSION}"

    echo "Using kernel build directory $BUILDDIR"
    $SU mkdir -p "$BUILDDIR"

    # Prevent a distro's custom installkernel script from being used.
    if [ -x /sbin/installkernel ]; then
        mount --bind /dev/null /sbin/installkernel
    fi

    # Make sure systemd-boot boots this kernel and not the distro provided one by overriding the version.
    EXTRA="O=$BUILDDIR VERSION=99"

    $SU make KCONFIG_ALLCONFIG="$SRCDIR/$CONFIG" O=$BUILDDIR alldefconfig

    # Ensure fast incremental builds by fixating these values which usually change for each build.
    export KBUILD_BUILD_TIMESTAMP="Fri Jun  5 15:58:00 CEST 2015"
    export KBUILD_BUILD_HOST="mkosi"

    $SU make $EXTRA -j "$(nproc)"
    $SU make $EXTRA -j "$(nproc)" headers
    make $EXTRA INSTALL_HDR_PATH="$DESTDIR/usr" headers_install

    KERNEL_RELEASE=$($SU make $EXTRA -s kernelrelease)
    mkdir -p "$DESTDIR/usr/lib/modules/$KERNEL_RELEASE"
    make $EXTRA INSTALL_MOD_PATH="$DESTDIR/usr" modules_install
    make $EXTRA INSTALL_PATH="$DESTDIR/usr/lib/modules/$KERNEL_RELEASE" install

    if [ -n "$SELFTESTS" ]; then
        if [ -n "$SELFTESTS_TARGETS" ]; then
            SELFTESTS_TARGETS="TARGETS=$SELFTESTS_TARGETS"
        else
            SELFTESTS_TARGETS=""
        fi

        if [ -n "$SELFTESTS_SKIP_TARGETS" ]; then
            SELFTESTS_SKIP_TARGETS="SKIP_TARGETS=$SELFTESTS_SKIP_TARGETS"
        else
            SELFTESTS_SKIP_TARGETS=""
        fi

        $SU make -C tools/testing/selftests -j "$(nproc)" $EXTRA KSFT_INSTALL_PATH="$DESTDIR/usr/lib/kernel/selftests" $SELFTESTS_TARGETS $SELFTESTS_SKIP_TARGETS
        mkdir -p "$DESTDIR/usr/lib/kernel/selftests"
        make -C tools/testing/selftests -j "$(nproc)" $EXTRA KSFT_INSTALL_PATH="$DESTDIR/usr/lib/kernel/selftests" $SELFTESTS_TARGETS $SELFTESTS_SKIP_TARGETS install
        mkdir -p "$DESTDIR/usr/bin"
        ln -sf /usr/lib/kernel/selftests/bpf/bpftool "$DESTDIR/usr/bin/bpftool"
    fi

    if [ -f tools/sched_ext/Makefile ]; then
        make -C tools/sched_ext -j "$(nproc)" $EXTRA
    fi
fi
